{"version":3,"file":"types.mjs","names":[],"sources":["../../../src/labs/VDataTable/types.ts"],"sourcesContent":["// Types\nimport type { GroupableItem } from './composables/group'\nimport type { SelectableItem } from './composables/select'\nimport type { SelectItemKey } from '@/util'\n\nexport type DataTableCompareFunction<T = any> = (a: T, b: T) => number\n\nexport type DataTableHeader = {\n  key: string\n  value?: SelectItemKey\n  title: string\n\n  colspan?: number\n  rowspan?: number\n\n  fixed?: boolean\n  align?: 'start' | 'end' | 'center'\n\n  width?: number | string\n  minWidth?: string\n  maxWidth?: string\n\n  sortable?: boolean\n  sort?: DataTableCompareFunction\n}\n\nexport type InternalDataTableHeader = DataTableHeader & {\n  sortable: boolean\n  fixedOffset?: number\n  lastFixed?: boolean\n}\n\nexport interface DataTableItem<T = any> extends GroupableItem<T>, SelectableItem {\n  index: number\n  columns: {\n    [key: string]: any\n  }\n}\n"],"mappings":""}