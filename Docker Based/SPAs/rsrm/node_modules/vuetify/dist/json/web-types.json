{
  "$schema": "http://json.schemastore.org/web-types",
  "framework": "vue",
  "name": "vuetify",
  "version": "3.3.2",
  "contributions": {
    "html": {
      "types-syntax": "typescript",
      "description-markup": "markdown",
      "tags": [
        {
          "name": "VAlert",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAlert"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-alert",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "border",
              "description": "Adds a colored border to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'top' | 'end' | 'bottom' | 'start'\n"
              }
            },
            {
              "name": "type",
              "description": "Create a specialized alert that uses a contextual color and has a pre-defined icon.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "'success' | 'info' | 'warning' | 'error'\n"
              }
            },
            {
              "name": "borderColor",
              "description": "Specifies the color of the border. Accepts any color value.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "closable",
              "description": "Adds a close icon that can hide the alert.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeIcon",
              "description": "Change the default icon used for **closable** alerts.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'$close'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "closeLabel",
              "description": "Text used for *aria-label* on **closable** alerts. Can also be customized globally in [Internationalization](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "  | false\n  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prominent",
              "description": "Displays a larger vertically centered icon to draw more attention.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'flat'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            }
          ],
          "events": [
            {
              "name": "click:close",
              "description": "Emitted when close icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-alert#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-alert#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "prepend",
              "description": "Slot for icon at beginning of alert.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "append",
              "description": "Slot for icon at end of alert.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "close",
              "description": "Slot for icon used in **dismissible** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAlertTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAlertTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-alert-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-alert-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-alert-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VApp",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VApp"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app",
          "attributes": [
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-app#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "fullHeight",
              "description": "Sets the component height to 100%",
              "doc-url": "https://vuetifyjs.com/api/v-app#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "overlaps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/layout.json))",
              "doc-url": "https://vuetifyjs.com/api/v-app#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAppBar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAppBar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app-bar",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "flat",
              "description": "Removes the component's **box-shadow**.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'prominent' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Designates a specific height for the toolbar. Overrides the heights imposed by other props, e.g. **prominent**, **dense**, **extended**, etc.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "64",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Aligns the component towards the top or bottom.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "'top'",
              "value": {
                "kind": "expression",
                "type": "'top' | 'bottom'\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies position: absolute to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "'header'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "image",
              "description": "Specifies a [v-img](/components/images) as the component's background.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "scrollBehavior",
              "description": "Specify an action to take when the scroll position of **scroll-target** reaches **scroll-threshold**. Accepts any combination of hide, inverted, collapse, elevate, and fade-image. Multiple values can be used, separated by a space.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "collapse",
              "description": "Morphs the component into a collapsed state, reducing its maximum width.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "extended",
              "description": "Use this prop to increase the height of the toolbar _without_ using the `extension` slot for adding content. May be used in conjunction with the **extension-height** prop, and any of the other props that affect the height of the toolbar, e.g. **prominent**, **dense**, etc., **WITH THE EXCEPTION** of **height**.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "extensionHeight",
              "description": "Designate an explicit height for the `extension` slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "floating",
              "description": "Applies **display: inline-flex** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "scrollTarget",
              "description": "The element to target for scrolling events. Uses `window` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "scrollThreshold",
              "description": "The amount of scroll distance down before **scroll-behavior** activates.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "image",
              "description": "Expects the [`v-img`](/components/images/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "extension",
              "description": "Slot positioned directly under the main content of the toolbar. Height of this slot can be set explicitly with the **extension-height** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAppBarNavIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAppBarNavIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/) ",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "flat",
              "description": "Removes the button box shadow.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'$menu'",
              "value": {
                "kind": "expression",
                "type": "  | boolean\n  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'button'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "block",
              "description": "Expands the button to 100% of available space.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "stacked",
              "description": "Displays the button as a flex-column.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAppBarTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAppBarTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app-bar-title",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAutocomplete",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAutocomplete"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-autocomplete",
          "attributes": [
            {
              "name": "flat",
              "description": "Removes elevation (shadow) added to element when using the **solo** or **solo-inverted** props",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "type",
              "description": "Sets input type",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation ",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "autoSelectFirst",
              "description": "When searching, will always highlight the first option and select it on blur. `exact` will only highlight and select exact matches.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'exact'\n"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "filterMode",
              "description": "Apply a specific filter when matching items. **some** is the default, which will return true if any key matches the search term. **every** will return true only if every key matches the search term. The **union** mode will return true if every key matches the search term. The **intersection** mode will return true if any key matches the search term.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'\n"
              }
            },
            {
              "name": "noFilter",
              "description": "Do not apply filtering when searching. Useful when data is being filtered server side",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customFilter",
              "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>\n"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a> }\n"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "['title']",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "chips",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closableChips",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideSelected",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "menu",
              "description": "Renders with the menu open by default",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "menuIcon",
              "description": "Sets the the spin icon",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$dropdown'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "menuProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "multiple",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "openOnClear",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clerable** prop is set to true",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | true\n"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "(value: any) => number\n"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, boolean>\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:search",
              "description": "Event emitted when the search value changes",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:menu",
              "description": "Event that is emitted when the component's menu state changes",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "chip",
              "description": "Slot for custom chip when using the [chip](#property-chip) prop",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "selection",
              "description": "Define a custom selection appearance",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "prepend-item",
              "description": "Adds an item before menu content",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "append-item",
              "description": "Adds an item after menu content",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAvatar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAvatar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-avatar",
          "attributes": [
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'flat'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "image",
              "description": "Apply a specific image using [v-img](/components/images/).",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBadge",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBadge"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-badge",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'top end'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "floating",
              "description": "Elevates the badge above the slotted content.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "The **aria-label** used for the badge",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'$vuetify.badge'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'scale-rotate-transition'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "bordered",
              "description": "Applies a **2px** by default and **1.5px** border around the badge when using the **dot** property.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "content",
              "description": "Text content to show in the badge.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "dot",
              "description": "Reduce the size of the badge and hide its contents.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inline",
              "description": "Moves the badge to be inline with the wrapping element. Supports the usage of the **left** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum number allowed when using the **content** prop with a `number` like value. If the content number exceeds the maximum value, a `+` suffix is added.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offsetX",
              "description": "Offset the badge on the x-axis.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offsetY",
              "description": "Offset the badge on the y-axis.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "textColor",
              "description": "Applies a specified color to the control text - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#slots"
            },
            {
              "name": "badge",
              "description": "The slot used for the badge's content.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBanner",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBanner"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-banner",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "sticky",
              "description": "Applies **position: sticky** to the component (**Evergreen browsers only**). You can find more information on the [MDN documentation for sticky position](https://developer.mozilla.org/en-US/docs/Web/CSS/position).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "stacked",
              "description": "Forces the banner actions onto a new line. This is only applicable when the banner is not **single-line** or using the **actions** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "avatar",
              "description": "Designates a specific src image to pass to the thumbnail.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lines",
              "description": "The amount of visible lines of text before it truncates.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "'one' | 'two' | 'three'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            },
            {
              "name": "actions",
              "description": "The slot used for the action's content such as a [v-btn](/components/buttons). The **dismiss** function in this slots scope, when invoked, will close the banner.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBannerActions",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBannerActions"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-banner-actions",
          "attributes": [
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-actions#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-banner-actions#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-actions#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBannerText",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBannerText"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-banner-text",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-banner-text#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-text#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBottomNavigation",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBottomNavigation"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "56",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'header'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'bottom-navigation'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'v-btn--selected'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Changes the orientation and active state styling of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "grow",
              "description": "Force all [v-btn](/components/buttons) children to take up all available horizontal space.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBottomSheet",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBottomSheet"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "2400",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activator",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | Element | ComponentPublicInstance\n"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'v-bottom-sheet__content'",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "contentProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "activatorProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "{}\n"
              }
            },
            {
              "name": "openOnClick",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnHover",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnFocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'center center'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]\n"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'block'",
              "value": {
                "kind": "expression",
                "type": "'close' | 'block' | 'none' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'bottom-sheet-transition'",
              "value": {
                "kind": "expression",
                "type": "string | { component: Component }\n"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element\n"
              }
            },
            {
              "name": "inset",
              "description": "Reduces the sheet content maximum width to 70%.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "fullscreen",
              "description": "Changes layout for fullscreen display.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "retainFocus",
              "description": "Tab focus will return to the first child of the dialog by default. Disable this when using external tools that require focus such as TinyMCE or vue-clipboard.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrollable",
              "description": "When set to true, expects a `v-card` and a `v-card-text` component with a designated height. For more information, check out the [scrollable example](/components/dialogs#scrollable).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBreadcrumbs",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBreadcrumbs"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "'ul'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(\n  | string\n  | (Partial<LinkProps> & { title: string; disabled?: boolean })\n)[]\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "divider",
              "description": "Specifies the dividing character between items.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "'/'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "prepend",
              "description": "The slot used for prepend content.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots"
            },
            {
              "name": "title",
              "description": "The slot used to display the title of each breadcrumb.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "string | Partial<LinkProps> & { title: string; disabled: boolean }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "divider",
              "description": "The slot used for dividers.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "string | Partial<LinkProps> & { title: string; disabled: boolean }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBreadcrumbsDivider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBreadcrumbsDivider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-divider",
          "attributes": [
            {
              "name": "divider",
              "description": "Specifies the dividing character between items.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-divider#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-divider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBreadcrumbsItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBreadcrumbsItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "'li'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBtn",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBtn"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-btn",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/) ",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "flat",
              "description": "Removes the button box shadow.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "  | boolean\n  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'button'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "block",
              "description": "Expands the button to 100% of available space.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "stacked",
              "description": "Displays the button as a flex-column.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBtnGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBtnGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-btn-group",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "divided",
              "description": "Add dividers between children [v-btn](/components/buttons) components.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBtnToggle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBtnToggle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-btn-toggle",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Round edge buttons",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            },
            {
              "name": "divided",
              "description": "Add dividers between children [v-btn](/components/buttons) components.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#slots",
              "vue-properties": [
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                },
                {
                  "name": "selected",
                  "type": "Ref<readonly number[]>"
                },
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCard",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCard"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "flat",
              "description": "Removes the card's elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "image",
              "description": "Apply a specific background image to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends a [v-icon](/components/icons/) component to the header",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "link",
              "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "hover",
              "description": "Applies **4dp** of elevation when hovered (default 2dp). You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "actions",
              "description": "The slot used for the card actions; located at the bottom of the card.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "image",
              "description": "The slot used for the card image. This is used with the [image](#props-image) prop.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardActions",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardActions"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-actions",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-actions#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-item",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardSubtitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardSubtitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-subtitle",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-card-subtitle#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-subtitle#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardText",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardText"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-text",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-card-text#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-text#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-card-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCarousel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCarousel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-carousel",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "500",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverse the normal transition direction.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies a color to the navigation dots - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'v-window-item--active'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "direction",
              "description": "The transition direction when changing windows.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "'force'\n"
              }
            },
            {
              "name": "cycle",
              "description": "Determines if the carousel should cycle through images.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "delimiterIcon",
              "description": "Sets icon for carousel delimiter",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'$delimiter'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "hideDelimiters",
              "description": "Hides the carousel's bottom delimiters.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDelimiterBackground",
              "description": "Hides the bottom delimiter background.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "interval",
              "description": "The duration between image cycles. Requires the **cycle** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "6000",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "progress",
              "description": "Displays a carousel progress bar. Requires the **cycle** prop and **interval**.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "continuous",
              "description": "Determines whether carousel is continuous",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "The displayed icon for forcing pagination to the next item.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "The displayed icon for forcing pagination to the previous item.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "showArrows",
              "description": "Displays arrows for next/previous navigation.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "touch",
              "description": "Provide a custom **left** and **right** function when swiped left or right.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "verticalDelimiters",
              "description": "Displays carousel delimiters vertically.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'left' | 'right'\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean; }[]>; disabled: Ref<boolean>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "additional",
              "description": "Slot for additional content at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean; }[]>; disabled: Ref<boolean>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Slot displaying the arrow switching to the previous item",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: string | (string | [string, number])[] | (new () => any) | FunctionalComponent; class: string; onClick: () => void; ariaLabel: string }"
                }
              ]
            },
            {
              "name": "next",
              "description": "Slot displaying the arrow switching to the next item",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: string | (string | [string, number])[] | (new () => any) | FunctionalComponent; class: string; onClick: () => void; ariaLabel: string }"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, any>"
                },
                {
                  "name": "item",
                  "type": "{ id: number; value: unknown; disabled: boolean }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCarouselItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCarouselItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-carousel-item",
          "attributes": [
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "disabled",
              "description": "Prevents the item from becoming active when using the \"next\" and \"prev\" buttons or the `toggle` method",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Apply a custom class to the internal content element.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "transition",
              "description": "The transition used when the component progressing through items. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "options",
              "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "{\n  root: undefined,\n  rootMargin: undefined,\n  threshold: undefined\n}",
              "value": {
                "kind": "expression",
                "type": "{ root: any; rootMargin: any; threshold: any }\n"
              }
            },
            {
              "name": "inline",
              "description": "Display as an inline element instead of a block, also disables flex-grow.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "alt",
              "description": "Alternate text for screen readers. Leave empty for decorative images.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "cover",
              "description": "Resizes the background image to cover the entire container.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "gradient",
              "description": "The gradient to apply to the image. This can be any valid CSS gradient declaration. You can find more information on the [MDN documentation for gradients](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lazySrc",
              "description": "Something to show while waiting for the main image to load, typically a small base64-encoded thumbnail. Has a slight blur filter applied.\n\nUse [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader) to generate automatically. NOTE: This prop has no effect unless either `height` or `aspect-ratio` are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "sizes",
              "description": "For use with `srcset`, see [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "src",
              "description": "The image URL. This prop is mandatory.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | { src: string; srcset: string; lazySrc: string; aspect: number }\n"
              }
            },
            {
              "name": "srcset",
              "description": "A set of alternate images to use based on device size. [Read more...](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "aspectRatio",
              "description": "Sets a base aspect ratio, calculated as width/height. This will only set a **minimum** height, the component can still grow if it has a lot of content",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "reverseTransition",
              "description": "Sets the reverse transition",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            },
            {
              "name": "placeholder",
              "description": "Display an overlay while the image is loading",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            },
            {
              "name": "error",
              "description": "Will be shown if the image fails to load, replacing the placeholder slot",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            },
            {
              "name": "sources",
              "description": "A list of `<source>` elements. If this slot is used v-img will render a `<picture>` instead of `<img>`",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCheckbox",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCheckbox"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-checkbox",
          "attributes": [
            {
              "name": "type",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Changes expected model to an array",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "indeterminate",
              "description": "Sets an indeterminate state for the checkbox",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "indeterminateIcon",
              "description": "The icon used when in an indeterminate state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'$checkboxIndeterminate'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'$checkboxOff'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'$checkboxOn'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<any>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCheckboxBtn",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCheckboxBtn"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn",
          "attributes": [
            {
              "name": "type",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inline",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "indeterminate",
              "description": "Puts the control in an indeterminate state. Used with the [indeterminate-icon](#props-indeterminate-icon) property.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "indeterminateIcon",
              "description": "Icon used when the component is in an indeterminate state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'$checkboxIndeterminate'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'$checkboxOff'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'$checkboxOn'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:indeterminate",
              "description": "Event that is emitted when the component's indeterminate state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#slots"
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<any>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VChip",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VChip"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-chip",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "filter",
              "description": "Displays a selection icon when selected",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "closable",
              "description": "Adds remove button and then a chip can be closed",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeIcon",
              "description": "Change the default icon used for **close** chips",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'$delete'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "closeLabel",
              "description": "Text used for *aria-label* on the close button in **close** chips. Can also be customized globally in [Internationalization](/customization/internationalization)",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'span'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'tonal'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when a child of a [v-chip-group](/components/chip-groups)",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "label",
              "description": "Applies a medium size border radius",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "link",
              "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "draggable",
              "description": "Makes the chip draggable",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "filterIcon",
              "description": "Change the default icon used for **filter** chips",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'$complete'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "pill",
              "description": "Remove `v-avatar` padding",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "click:close",
              "description": "Emitted when close icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            },
            {
              "name": "click",
              "description": "Emitted when component is clicked, toggles chip if contained in a chip group - Will trigger component to ripple when clicked unless the `.native` modifier is used",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent | KeyboardEvent]\n"
                }
              ]
            },
            {
              "name": "clickOnce",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "selectedClass",
                  "type": "boolean | string[]"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggle",
                  "type": "() => void"
                },
                {
                  "name": "value",
                  "type": "unknown"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "close",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "filter",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VChipGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VChipGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-chip-group",
          "attributes": [
            {
              "name": "filter",
              "description": "Applies an checkmark icon in front of every chip for using it like a filter",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'tonal'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'v-chip--selected'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            },
            {
              "name": "column",
              "description": "Remove horizontal pagination and wrap items as needed",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "selected",
                  "type": "number[]"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VClassIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VClassIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-class-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-class-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-class-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCode",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCode"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-code",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-code#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-code#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCol",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCol"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-col",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "order",
              "description": "Sets the default [order](https://developer.mozilla.org/en-US/docs/Web/CSS/order) for the column.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offset",
              "description": "Sets the default offset for the column.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "cols",
              "description": "Sets the default number of columns the component extends. Available options are: **1 -> 12** and **auto**.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "sm",
              "description": "Changes the number of columns on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "md",
              "description": "Changes the number of columns on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "lg",
              "description": "Changes the number of columns on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "xl",
              "description": "Changes the number of columns on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "xxl",
              "description": "Changes the number of columns on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "offsetSm",
              "description": "Changes the offset of the component on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offsetMd",
              "description": "Changes the offset of the component on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offsetLg",
              "description": "Changes the offset of the component on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offsetXl",
              "description": "Changes the offset of the component on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "offsetXxl",
              "description": "Changes the offset of the component on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "orderSm",
              "description": "Changes the order of the component on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "orderMd",
              "description": "Changes the order of the component on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "orderLg",
              "description": "Changes the order of the component on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "orderXl",
              "description": "Changes the order of the component on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "orderXxl",
              "description": "Changes the order of the component on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "alignSelf",
              "description": "Applies the [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items) css property. Available options are: **start**, **center**, **end**, **auto**, **baseline** and **stretch**.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'auto' | 'baseline' | 'stretch'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-col#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VColorPicker",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VColorPicker"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-color-picker",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | Record<string, unknown>\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width of the color picker",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mode",
              "description": "The current selected input type. Syncable with `v-model:mode`",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "'rgba'",
              "value": {
                "kind": "expression",
                "type": "'rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa'\n"
              }
            },
            {
              "name": "canvasHeight",
              "description": "Height of canvas",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "150",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "dotSize",
              "description": "Changes the size of the selection dot on the canvas",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "hideCanvas",
              "description": "Hides canvas",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideSliders",
              "description": "Hides sliders",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideInputs",
              "description": "Hides inputs",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "modes",
              "description": "Sets available input types",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "['rgb', 'rgba', 'hsl', 'hsla', 'hex', 'hexa']",
              "value": {
                "kind": "expression",
                "type": "('rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa')[]\n"
              }
            },
            {
              "name": "showSwatches",
              "description": "Displays color swatches",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "swatchesMaxHeight",
              "description": "Sets the maximum height of the swatches section",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "150",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "swatches",
              "description": "Sets the available color swatches to select from. 2D array of rows and columns, accepts any color format the picker does",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "(\n  | string\n  | number\n  | {\n      readonly h: number\n      readonly s: number\n      readonly v: number\n      readonly a?: number\n    }\n  | {\n      readonly r: number\n      readonly g: number\n      readonly b: number\n      readonly a?: number\n    }\n  | {\n      readonly h: number\n      readonly s: number\n      readonly l: number\n      readonly a?: number\n    }\n)[][]\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:mode",
              "description": "Selected mode",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "['rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa']\n"
                }
              ]
            }
          ],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCombobox",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCombobox"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-combobox",
          "attributes": [
            {
              "name": "flat",
              "description": "Removes elevation (shadow) added to element when using the **solo** or **solo-inverted** props",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "type",
              "description": "Sets input type",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation ",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "autoSelectFirst",
              "description": "When searching, will always highlight the first option and select it on blur. `exact` will only highlight and select exact matches.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'exact'\n"
              }
            },
            {
              "name": "filterMode",
              "description": "Apply a specific filter when matching items. **some** is the default, which will return true if any key matches the search term. **every** will return true only if every key matches the search term. The **union** mode will return true if every key matches the search term. The **intersection** mode will return true if any key matches the search term.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'\n"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customFilter",
              "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>\n"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a> }\n"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "['title']",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "chips",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closableChips",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideSelected",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "menu",
              "description": "Renders with the menu open by default",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "menuIcon",
              "description": "Sets the the spin icon",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$dropdown'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "menuProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "multiple",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "openOnClear",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clerable** prop is set to true",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | true\n"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "(value: any) => number\n"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, boolean>\n"
              }
            },
            {
              "name": "delimiters",
              "description": "Accepts an array of strings that will trigger a new tag when typing. Does not replace the normal Tab and Enter keys.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:search",
              "description": "Event emitted when the search value changes",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "update:menu",
              "description": "Event that is emitted when the component's menu state changes",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "chip",
              "description": "Slot for custom chip when using the [chip](#property-chip) prop",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "selection",
              "description": "Define a custom selection appearance",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "prepend-item",
              "description": "Adds an item before menu content",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "append-item",
              "description": "Adds an item after menu content",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VComponentIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VComponentIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-component-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-component-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-component-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-component-icon#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VContainer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VContainer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-container",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-container#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "fluid",
              "description": "Removes viewport maximum-width size breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-container#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-container#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCounter",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCounter"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-counter",
          "attributes": [
            {
              "name": "value",
              "description": "Sets the current counter value.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "active",
              "description": "Determines whether the counter is visible or not.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "default": "{component: {name: 'slide-y-transition'}}",
              "value": {
                "kind": "expression",
                "type": "string | { component: Component }\n"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum allowed value.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#slots",
              "vue-properties": [
                {
                  "name": "counter",
                  "type": "string"
                },
                {
                  "name": "max",
                  "type": "string | number"
                },
                {
                  "name": "value",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataIterator",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataIterator"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-iterator",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "loading",
              "description": "If `true` and no items are provided, then a loading text will be shown",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "filterMode",
              "description": "Apply a specific filter when matching items. **some** is the default, which will return true if any key matches the search term. **every** will return true only if every key matches the search term. The **union** mode will return true if every key matches the search term. The **intersection** mode will return true if any key matches the search term.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'\n"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customFilter",
              "description": "Function to filter items",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>\n"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a> }\n"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "itemValue",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "itemSelectable",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "showSelect",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectStrategy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'single' | 'page' | 'all'\n"
              }
            },
            {
              "name": "page",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "sortBy",
              "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "multiSort",
              "description": "If `true` then one can sort on multiple properties",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mustSort",
              "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customKeySort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, (a: any, b: any) => number>\n"
              }
            },
            {
              "name": "itemsPerPage",
              "description": "Changes how many items per page should be visible. Can be used with `.sync` modifier. Setting this prop to `-1` will display all items on the page",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "5",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "expandOnClick",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "showExpand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expanded",
              "description": "Array of expanded items. Can be used with `.sync` modifier",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            },
            {
              "name": "groupBy",
              "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any[]]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:page",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:itemsPerPage",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:expanded",
              "description": "The `.sync` event for `expanded` prop",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot. Use this to render your items",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "prevPage",
                  "type": "() => void"
                },
                {
                  "name": "nextPage",
                  "type": "() => void"
                },
                {
                  "name": "setPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                }
              ]
            },
            {
              "name": "header",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "prevPage",
                  "type": "() => void"
                },
                {
                  "name": "nextPage",
                  "type": "() => void"
                },
                {
                  "name": "setPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                }
              ]
            },
            {
              "name": "footer",
              "description": "Defines a footer below the items",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "prevPage",
                  "type": "() => void"
                },
                {
                  "name": "nextPage",
                  "type": "() => void"
                },
                {
                  "name": "setPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTable",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTable"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height of the table rows",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Set an explicit height of table",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "filterMode",
              "description": "Apply a specific filter when matching items. **some** is the default, which will return true if any key matches the search term. **every** will return true only if every key matches the search term. The **union** mode will return true if every key matches the search term. The **intersection** mode will return true if any key matches the search term.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'\n"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customFilter",
              "description": "Function to filter items",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>\n"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a> }\n"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemValue",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hover",
              "description": "Adds a hover effects to a table rows",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemSelectable",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "showSelect",
              "description": "Shows the select checkboxes in both the header and rows (if using default rows)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectStrategy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'single' | 'page' | 'all'\n"
              }
            },
            {
              "name": "page",
              "description": "The current displayed page number (1-indexed)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "sortBy",
              "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "multiSort",
              "description": "If `true` then one can sort on multiple properties",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mustSort",
              "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customKeySort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, (a: any, b: any) => number>\n"
              }
            },
            {
              "name": "itemsPerPage",
              "description": "Changes how many items per page should be visible. Can be used with `.sync` modifier. Setting this prop to `-1` will display all items on the page",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "expandOnClick",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "showExpand",
              "description": "Shows the expand toggle in default rows",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expanded",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            },
            {
              "name": "groupBy",
              "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "headers",
              "description": "An array of objects that each describe a header column. See the example below for a definition of all properties",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "DeepReadonly<DataTableHeader[] | DataTableHeader[][]>\n"
              }
            },
            {
              "name": "loadingText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "rowHeight",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "sortAscIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$sortAsc'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "sortDescIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$sortDesc'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Fixed header to top of table",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "fixedFooter",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "firstIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$first'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lastIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$last'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemsPerPageText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.itemsPerPageText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "pageText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.pageText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "firstPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.firstPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prevPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.prevPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "nextPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.nextPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lastPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.lastPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemsPerPageOptions",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[\n  {value: 10, title: '10'},\n  {value: 25, title: '25'},\n  {value: 50, title: '50'},\n  {value: 100, title: '100'},\n  {value: -1, title: '$vuetify.dataFooter.itemsPerPageAll'}\n]",
              "value": {
                "kind": "expression",
                "type": "{ title: string; value: number }[]\n"
              }
            },
            {
              "name": "showCurrentPage",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any[]]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:page",
              "description": "Emits when the **page** property of the **options** prop is updated",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:itemsPerPage",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "Emits when one of the **options** properties is updated",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:expanded",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:row",
              "description": "Emits when a table row is clicked. This event provides 2 arguments: the first is the native click event, and the second is an object containing the corresponding item for that row. **NOTE:** will not emit when table rows are defined through a slot such as `item` or `body`.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[Event, { item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item",
              "description": "Slot to replace the default rendering of a row",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "loading",
              "description": "Defines content for when `loading` is true and no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "group-header",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "expanded-row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "Slot to replace the default `v-simple-checkbox` used when selecting rows",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-expand",
              "description": "Slot to replace the default `v-icon` used when expanding rows",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "headers",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "getFixedStyles",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>, y: number) => CSSProperties"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "column.data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            },
            {
              "name": "column.data-table-expand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "colgroup",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "top",
              "description": "Slot to add content above the table",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body",
              "description": "Slot to replace the default table `<tbody>`",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tbody",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "thead",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tfoot",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "bottom",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "footer.prepend",
              "description": "Adds content to the empty space in the footer",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "[`item.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "[`column.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableFooter",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableFooter"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-footer",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "[string]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-footer#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableRow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableRow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-row",
          "attributes": [
            {
              "name": "item",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>\n"
              }
            },
            {
              "name": "index",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#props",
              "value": {
                "kind": "expression",
                "type": "Number\n"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Event that is emitted when the component is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            }
          ],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableRows",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableRows"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-rows",
          "attributes": [
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]\n"
              }
            },
            {
              "name": "loading",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "loadingText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "rowHeight",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            }
          ],
          "events": [
            {
              "name": "click:row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[Event, { item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "loading",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "group-header",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "expanded-row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-expand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "[`item.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableServer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableServer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-server",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Use the height prop to set the height of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemValue",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hover",
              "description": "Will add a hover effect to a table's row when the mouse is over it.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemSelectable",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "showSelect",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectStrategy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'single' | 'page' | 'all'\n"
              }
            },
            {
              "name": "page",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "sortBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "multiSort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mustSort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customKeySort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, (a: any, b: any) => number>\n"
              }
            },
            {
              "name": "itemsPerPage",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "expandOnClick",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "showExpand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expanded",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            },
            {
              "name": "groupBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "itemsLength",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "headers",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "DeepReadonly<DataTableHeader[] | DataTableHeader[][]>\n"
              }
            },
            {
              "name": "loadingText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "rowHeight",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "sortAscIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$sortAsc'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "sortDescIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$sortDesc'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Use the fixed-header prop together with the height prop to fix the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "fixedFooter",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "firstIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$first'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lastIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$last'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemsPerPageText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.itemsPerPageText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "pageText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.pageText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "firstPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.firstPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prevPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.prevPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "nextPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.nextPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lastPageLabel",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.lastPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemsPerPageOptions",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[\n  {value: 10, title: '10'},\n  {value: 25, title: '25'},\n  {value: 50, title: '50'},\n  {value: 100, title: '100'},\n  {value: -1, title: '$vuetify.dataFooter.itemsPerPageAll'}\n]",
              "value": {
                "kind": "expression",
                "type": "{ title: string; value: number }[]\n"
              }
            },
            {
              "name": "showCurrentPage",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any[]]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:page",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:itemsPerPage",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:expanded",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[Event, { item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "loading",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "group-header",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "expanded-row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-expand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "headers",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "getFixedStyles",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>, y: number) => CSSProperties"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "column.data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            },
            {
              "name": "column.data-table-expand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "colgroup",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "top",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tbody",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "thead",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tfoot",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "bottom",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "footer.prepend",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "[`item.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "[`column.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableVirtual",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableVirtual"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Use the height prop to set the height of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "filterMode",
              "description": "Apply a specific filter when matching items. **some** is the default, which will return true if any key matches the search term. **every** will return true only if every key matches the search term. The **union** mode will return true if every key matches the search term. The **intersection** mode will return true if any key matches the search term.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'\n"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customFilter",
              "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>\n"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a> }\n"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemValue",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hover",
              "description": "Will add a hover effect to a table's row when the mouse is over it.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "itemSelectable",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "showSelect",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectStrategy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'single' | 'page' | 'all'\n"
              }
            },
            {
              "name": "sortBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "multiSort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mustSort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "customKeySort",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, (a: any, b: any) => number>\n"
              }
            },
            {
              "name": "expandOnClick",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "showExpand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expanded",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            },
            {
              "name": "groupBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]\n"
              }
            },
            {
              "name": "headers",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "DeepReadonly<DataTableHeader[] | DataTableHeader[][]>\n"
              }
            },
            {
              "name": "loadingText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "rowHeight",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "sortAscIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$sortAsc'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "sortDescIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$sortDesc'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Use the fixed-header prop together with the height prop to fix the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "fixedFooter",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "itemHeight",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any[]]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:expanded",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[Event, { item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "loading",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "group-header",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "expanded-row",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "item.data-table-expand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "headers",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "getFixedStyles",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>, y: number) => CSSProperties"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "column.data-table-select",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            },
            {
              "name": "column.data-table-expand",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            },
            {
              "name": "top",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "bottom",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "[`item.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L33-L38\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                }
              ]
            },
            {
              "name": "[`column.${string}`]",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L27-L31\" target=\"_blank\">InternalDataTableHeader</a>) => string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDefaultsProvider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDefaultsProvider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-defaults-provider",
          "attributes": [
            {
              "name": "disabled",
              "description": "Turns off all calcuations of new default values for improved performance in situations where defaults propagation isn't necessary",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "root",
              "description": "Force current defaults to match the application root defaults",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "reset",
              "description": "Reset the default values up the nested chain by {n} amount",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "scoped",
              "description": "Prevents the ability for default values to be inherited from parent components",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "defaults",
              "description": "Specify new default prop values for components. Keep in mind that this will be merged with previously defined values",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "value": {
                "kind": "expression",
                "type": "{\n  global: Record<string, unknown>\n  [string]: Record<string, unknown>\n}\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialog",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialog"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "2400",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activator",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | Element | ComponentPublicInstance\n"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "contentProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of a `v-dialog`'s content when using the **persistent** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing **esc** key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "activatorProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "{}\n"
              }
            },
            {
              "name": "openOnClick",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnHover",
              "description": "Designates whether component should activate when its activator is hovered.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnFocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'center center'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]\n"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'block'",
              "value": {
                "kind": "expression",
                "type": "'close' | 'block' | 'none' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "{component: {name: 'VDialogTransition'}}",
              "value": {
                "kind": "expression",
                "type": "string | { component: Component }\n"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element\n"
              }
            },
            {
              "name": "fullscreen",
              "description": "Changes layout for fullscreen display.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "retainFocus",
              "description": "Tab focus will return to the first child of the dialog by default. Disable this when using external tools that require focus such as TinyMCE or vue-clipboard.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrollable",
              "description": "When set to true, expects a `v-card` and a `v-card-text` component with a designated height. For more information, check out the [scrollable example](/components/dialogs#scrollable).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialogBottomTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialogBottomTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialogTopTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialogTopTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialogTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialogTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog-transition",
          "attributes": [
            {
              "name": "target",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-dialog-transition.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-transition#props",
              "value": {
                "kind": "expression",
                "type": "HTMLElement\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDivider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDivider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-divider",
          "attributes": [
            {
              "name": "length",
              "description": "Sets the dividers length. Default unit is px.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "vertical",
              "description": "Displays dividers vertically.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inset",
              "description": "Adds indentation (72px) for **normal** dividers, reduces max height for **vertical**.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "thickness",
              "description": "Sets the dividers thickness. Default unit is px.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpandTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpandTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expand-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-expand-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-expand-transition#props",
              "default": "'in-out'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'in-out' | 'out-in'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expand-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpandXTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpandXTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition#props",
              "default": "'in-out'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'in-out' | 'out-in'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panel",
          "attributes": [
            {
              "name": "title",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "Controls the opened/closed state of content",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | Record<string, any>\n"
              }
            },
            {
              "name": "disabled",
              "description": "Disables the expansion-panel content",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "Makes the expansion-panel content read only.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "expandIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "'$expand'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "collapseIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "'$collapse'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "hideActions",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanelText",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanelText"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-text",
          "attributes": [
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-text#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-text#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanelTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanelTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | Record<string, any>\n"
              }
            },
            {
              "name": "readonly",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expandIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "'$expand'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "collapseIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "'$collapse'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "hideActions",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#slots",
              "vue-properties": [
                {
                  "name": "collapseIcon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "expanded",
                  "type": "boolean"
                },
                {
                  "name": "expandIcon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "readonly",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "actions",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#slots",
              "vue-properties": [
                {
                  "name": "collapseIcon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "expanded",
                  "type": "boolean"
                },
                {
                  "name": "expandIcon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "readonly",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanels",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanels"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panels",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'inset' | 'accordion' | 'popout'\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "Makes the entire expansion-panel read only.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFabTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFabTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-fab-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "'center center'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "'out-in'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFadeTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFadeTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-fade-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VField",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VField"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-field",
          "attributes": [
            {
              "name": "flat",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation ",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clerable** prop is set to true",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                },
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFieldLabel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFieldLabel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-field-label",
          "attributes": [
            {
              "name": "floating",
              "description": "Elevates the label above the slotted content.",
              "doc-url": "https://vuetifyjs.com/api/v-field-label#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-field-label#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFileInput",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFileInput"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-file-input",
          "attributes": [
            {
              "name": "flat",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "File[]\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation ",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$file'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "chips",
              "description": "Changes display of selections to chips",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "multiple",
              "description": "Adds the **multiple** attribute to the input, allowing multiple file selections.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clerable** prop is set to true",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counter",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counterSizeString",
              "description": "The text displayed when using the **counter** and **show-size** props. Can also be customized globally on the [internationalization page](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$vuetify.fileInput.counterSize'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "counterString",
              "description": "The text displayed when using the **counter** prop. Can also be customized globally on the [internationalization page](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$vuetify.fileInput.counter'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "showSize",
              "description": "Sets the displayed size of selected file(s). When using **true** will default to _1000_ displaying (**kB, MB, GB**) while _1024_ will display (**KiB, MiB, GiB**).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 1000 | 1024\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[File[]]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:control",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "mousedown:control",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "counter",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "selection",
              "description": "Slot for defining a custom appearance for selected item(s). Provides the current **index**, **text** (truncated) and [file](https://developer.mozilla.org/en-US/docs/Web/API/File).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "fileNames",
                  "type": "string[]"
                },
                {
                  "name": "totalBytes",
                  "type": "number"
                },
                {
                  "name": "totalBytesReadable",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFooter",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFooter"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-footer",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "height",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-footer.json))",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "'footer'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "app",
              "description": "Determines the position of the footer. If true, the footer would be given a fixed position at the bottom of the viewport. If false, the footer is set to the bottom of the page",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VForm",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VForm"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-form",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The value representing the validity of the form. If the value is `null` then no validation has taken place yet, or the form has been reset. Otherwise the value will be a `boolean` that indicates if validation has passed or not.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children inputs into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts all children inputs into a readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Changes the events in which validation occurs.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "'input'",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "fastFail",
              "description": "Stop validation as soon as any rules fail.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event emitted when the form's validity changes",
              "doc-url": "https://vuetifyjs.com/api/v-form#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "submit",
              "description": "Emitted when form is submitted",
              "doc-url": "https://vuetifyjs.com/api/v-form#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/form.ts#L48-L48\" target=\"_blank\">SubmitEventPromise</a>]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-form#slots",
              "vue-properties": [
                {
                  "name": "errors",
                  "type": "Ref<{ id: string | number; errorMessages: string[]; }[]>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "ShallowRef<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "Ref<boolean> & { externalValue: boolean }"
                },
                {
                  "name": "items",
                  "type": "Ref<{ id: string | number; validate: () => Promise<string[]>; reset: () => void; resetValidation: () => void; isValid: boolean; errorMessages: string[]; }[]>"
                },
                {
                  "name": "validate",
                  "type": "() => Promise<{ valid: boolean; errors: { id: string | number; errorMessages: string[]; }[]; }>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VHover",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VHover"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-hover",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes hover functionality",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-hover#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#slots",
              "vue-properties": [
                {
                  "name": "isHovering",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-icon",
          "attributes": [
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "'i'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VImg",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VImg"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-img",
          "attributes": [
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Apply a custom class to the internal content element.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "transition",
              "description": "The transition to use when switching from `lazy-src` to `src`. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "'fade-transition'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "options",
              "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "{\n  root: undefined,\n  rootMargin: undefined,\n  threshold: undefined\n}",
              "value": {
                "kind": "expression",
                "type": "{ root: any; rootMargin: any; threshold: any }\n"
              }
            },
            {
              "name": "inline",
              "description": "Display as an inline element instead of a block, also disables flex-grow.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "alt",
              "description": "Alternate text for screen readers. Leave empty for decorative images.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "cover",
              "description": "Resizes the background image to cover the entire container.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "gradient",
              "description": "The gradient to apply to the image. This can be any valid CSS gradient declaration. You can find more information on the [MDN documentation for gradients](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lazySrc",
              "description": "Something to show while waiting for the main image to load, typically a small base64-encoded thumbnail. Has a slight blur filter applied.\n\nUse [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader) to generate automatically. NOTE: This prop has no effect unless either `height` or `aspect-ratio` are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "sizes",
              "description": "For use with `srcset`, see [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "src",
              "description": "The image URL. This prop is mandatory.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | { src: string; srcset: string; lazySrc: string; aspect: number }\n"
              }
            },
            {
              "name": "srcset",
              "description": "A set of alternate images to use based on device size. [Read more...](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "aspectRatio",
              "description": "Calculated as `width/height`, so for a 1920x1080px image this will be `1.7778`. Will be calculated automatically if omitted.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "error",
              "description": "Emitted if the image fails to load",
              "doc-url": "https://vuetifyjs.com/api/v-img#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "loadstart",
              "description": "Emitted when the image starts to load",
              "doc-url": "https://vuetifyjs.com/api/v-img#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "load",
              "description": "Emitted when the image is loaded",
              "doc-url": "https://vuetifyjs.com/api/v-img#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            },
            {
              "name": "placeholder",
              "description": "Display an overlay while the image is loading",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            },
            {
              "name": "error",
              "description": "Will be shown if the image fails to load, replacing the placeholder slot",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            },
            {
              "name": "sources",
              "description": "A list of `<source>` elements. If this slot is used v-img will render a `<picture>` instead of `<img>`",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VInfiniteScroll",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VInfiniteScroll"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll",
          "attributes": [
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "direction",
              "description": "Specifies if scroller is **vertical** or **horizontal**.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'vertical'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "mode",
              "description": "Specifies if content should load automatically when scrolling (**intersect**) or manually (**manual**).",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'intersect'",
              "value": {
                "kind": "expression",
                "type": "'intersect' | 'manual'\n"
              }
            },
            {
              "name": "side",
              "description": "Specifies the side where new content should appear. Either the **start**, **end**, or **both** sides.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'end'",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'both'\n"
              }
            },
            {
              "name": "margin",
              "description": "Value sent to the intersection observer. Will make the observer trigger earlier, by the margin (px) value supplied.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "loadMoreText",
              "description": "Text shown in default load more button, when in manual mode.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'$vuetify.infiniteScroll.loadMore'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "emptyText",
              "description": "Text shown when there is no more content to load.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'$vuetify.infiniteScroll.empty'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [
            {
              "name": "load",
              "description": "Emitted when reaching the start / end threshold, or if triggered when using manual mode.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[\n  {\n    side: 'end' | 'start' | 'both'\n    done: (status: 'error' | 'loading' | 'empty' | 'ok') => void\n  },\n]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots"
            },
            {
              "name": "loading",
              "description": "Shown when content is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"end\" | \"start\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "error",
              "description": "Shown when load returned status 'error'",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"end\" | \"start\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "empty",
              "description": "Shown when load returned status 'empty'",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"end\" | \"start\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "load-more",
              "description": "Shown when scrolled to either side of the content, in manual mode.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"end\" | \"start\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VInput",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VInput"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-input",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-item",
          "attributes": [
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-item#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-item#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "selectedClass",
                  "type": "boolean | string[]"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggle",
                  "type": "() => void"
                },
                {
                  "name": "value",
                  "type": "unknown"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VItemGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VItemGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-item-group",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the selected CSS class. This class will be available in `v-item` default scoped slot.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "'v-item--selected'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "selected",
                  "type": "number[]"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VKbd",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VKbd"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-kbd",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-kbd#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-kbd#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLabel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLabel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-label",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-label#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-label#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clickable",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-label.json))",
              "doc-url": "https://vuetifyjs.com/api/v-label#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-label#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLayout",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLayout"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-layout",
          "attributes": [
            {
              "name": "fullHeight",
              "description": "Sets the component height to 100%",
              "doc-url": "https://vuetifyjs.com/api/v-layout#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "overlaps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/layout.json))",
              "doc-url": "https://vuetifyjs.com/api/v-layout#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-layout#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLayoutItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLayoutItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-layout-item",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-layout-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "value": {
                "kind": "expression",
                "type": "'top' | 'bottom' | 'left' | 'right'\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "size",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-layout-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLazy",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLazy"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-lazy",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "'fade-transition'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "options",
              "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "{\n  root: undefined,\n  rootMargin: undefined,\n  threshold: undefined\n}",
              "value": {
                "kind": "expression",
                "type": "{ root: any; rootMargin: any; threshold: any }\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLigatureIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLigatureIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-ligature-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-ligature-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-ligature-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VList",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VList"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "unknown[]\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children inputs into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'children'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "baseColor",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lines",
              "description": "Designates a **minimum-height** for all children `v-list-item` components. This prop uses [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp) and is not supported in all browsers.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'one'",
              "value": {
                "kind": "expression",
                "type": "false | 'one' | 'two' | 'three'\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "selected",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "unknown[]\n"
              }
            },
            {
              "name": "selectStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'single-leaf'",
              "value": {
                "kind": "expression",
                "type": "  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | 'classic'\n  | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/selectStrategies.ts#L5-L12\" target=\"_blank\">SelectStrategyFn</a>\n"
              }
            },
            {
              "name": "nav",
              "description": "An alternative styling that reduces `v-list-item` width and rounds the corners. Typically used with **[v-navigation-drawer](/components/navigation-drawers)**",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'list'",
              "value": {
                "kind": "expression",
                "type": "  | 'multiple'\n  | 'single'\n  | 'list'\n  | { open: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/openStrategies.ts#L1-L8\" target=\"_blank\">OpenStrategyFn</a>; select: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/openStrategies.ts#L10-L18\" target=\"_blank\">OpenSelectStrategyFn</a> }\n"
              }
            },
            {
              "name": "opened",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "unknown[]\n"
              }
            },
            {
              "name": "itemType",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'type'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:selected",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown[]]\n"
                }
              ]
            },
            {
              "name": "update:opened",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown[]]\n"
                }
              ]
            },
            {
              "name": "click:open",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ id: unknown; value: boolean; path: unknown[] }]\n"
                }
              ]
            },
            {
              "name": "click:select",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ id: unknown; value: boolean; path: unknown[] }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "item",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            },
            {
              "name": "divider",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            },
            {
              "name": "subheader",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            },
            {
              "name": "header",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-group",
          "attributes": [
            {
              "name": "title",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "Expands / Collapse the list-group",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "fluid",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expandIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "'$expand'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "collapseIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "'$collapse'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "subgroup",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#slots"
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#slots",
              "vue-properties": [
                {
                  "name": "isOpen",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListImg",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListImg"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-img",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-list-img#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-img#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item",
          "attributes": [
            {
              "name": "title",
              "description": "Generates a `v-list-item-title` component with the supplied value",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control when in an **active** state or **input-value** is **true** - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "value",
              "description": "The value used for selection.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "baseColor",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "link",
              "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "lines",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "'one' | 'two' | 'three'\n"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "nav",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent | KeyboardEvent]\n"
                }
              ]
            },
            {
              "name": "clickOnce",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "isIndeterminate",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "isIndeterminate",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "isIndeterminate",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                }
              ]
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "title",
                  "type": "string | number | boolean"
                }
              ]
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "subtitle",
                  "type": "string | number | boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemAction",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemAction"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-action",
          "attributes": [
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemMedia",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemMedia"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-media",
          "attributes": [
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemSubtitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemSubtitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-subtitle",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-subtitle#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-subtitle#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListSubheader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListSubheader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-subheader",
          "attributes": [
            {
              "name": "title",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-subheader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-subheader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "inset",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-subheader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLocaleProvider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLocaleProvider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-locale-provider",
          "attributes": [
            {
              "name": "messages",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, any>\n"
              }
            },
            {
              "name": "locale",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "fallbackLocale",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "rtl",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VMain",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VMain"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-main",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-main#props",
              "default": "'main'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "scrollable",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-main.json))",
              "doc-url": "https://vuetifyjs.com/api/v-main#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-main#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VMenu",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VMenu"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-menu",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the max height of the menu content",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-menu.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activator",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | Element | ComponentPublicInstance\n"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "contentProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "activatorProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "{}\n"
              }
            },
            {
              "name": "openOnClick",
              "description": "Designates whether menu should open on activator click",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnHover",
              "description": "Designates whether menu should open on activator hover",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnFocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Designates if menu should close when its content is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only works with the **open-on-hover** prop",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "250",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only works with the **open-on-hover** prop",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'connected'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]\n"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'reposition'",
              "value": {
                "kind": "expression",
                "type": "'close' | 'block' | 'none' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "{component: {name: 'VDialogTransition'}}",
              "value": {
                "kind": "expression",
                "type": "string | { component: Component }\n"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default. Generally not recommended except as a last resort: the default positioning algorithm should handle most scenarios better than is possible without teleporting, and you may have unexpected behavior if the menu ends up as child of its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-menu#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-menu#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VMessages",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VMessages"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-messages",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Determines whether the messages are visible or not",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "default": "{\n  component: {name: 'slide-y-transition'},\n  leaveAbsolute: true,\n  group: true\n}",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | { component: Component; leaveAbsolute: boolean; group: boolean }\n"
              }
            },
            {
              "name": "messages",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-messages.json))",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-messages#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VNavigationDrawer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VNavigationDrawer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "256",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "'start'",
              "value": {
                "kind": "expression",
                "type": "'top' | 'end' | 'bottom' | 'start' | 'left' | 'right'\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "'nav'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "image",
              "description": "Apply a specific background image to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "floating",
              "description": "A floating drawer has no visible container (no border-right)",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "scrim",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "disableResizeWatcher",
              "description": "Will automatically open/close drawer when resized depending if mobile or desktop.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disableRouteWatcher",
              "description": "Disables opening of navigation drawer when route changes",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "expandOnHover",
              "description": "Collapses the drawer to a **mini-variant** until hovering with the mouse",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "permanent",
              "description": "The drawer remains visible regardless of screen size",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rail",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "railWidth",
              "description": "Sets the width for the component when `rail` is enabled.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "56",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "temporary",
              "description": "A temporary drawer sits above its application and uses a scrim (overlay) to darken the background",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "touchless",
              "description": "Disable mobile touch functionality",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:rail",
              "description": "Event that is emitted when the rail model changes",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots"
            },
            {
              "name": "prepend",
              "description": "A slot at the top of the drawer",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots"
            },
            {
              "name": "append",
              "description": "A slot at the bottom of the drawer",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots"
            },
            {
              "name": "image",
              "description": "Used to modify `v-img` properties when using the **src** prop",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots",
              "vue-properties": [
                {
                  "name": "image",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VNoSsr",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VNoSsr"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-no-ssr",
          "attributes": [],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VOverlay",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VOverlay"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-overlay",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activator",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | Element | ComponentPublicInstance\n"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "contentProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "activatorProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "{}\n"
              }
            },
            {
              "name": "openOnClick",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnHover",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnFocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]\n"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'block'",
              "value": {
                "kind": "expression",
                "type": "'close' | 'block' | 'none' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'fade-transition'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:outside",
              "description": "Event that fires when clicking outside an active overlay.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "afterLeave",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VPagination",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VPagination"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-pagination",
          "attributes": [
            {
              "name": "length",
              "description": "The number of pages",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "start",
              "description": "Specify the starting page",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'nav'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the selected page button - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "The icon to use for the next button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "The icon to use for the prev button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "firstIcon",
              "description": "The icon to use for the first button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$first'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "lastIcon",
              "description": "The icon to use for the last button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$last'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ariaLabel",
              "description": "Label for the root element",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.root'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "totalVisible",
              "description": "Specify the total visible pagination numbers",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "pageAriaLabel",
              "description": "Label for each page button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.page'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "currentPageAriaLabel",
              "description": "Label for the currently selected page",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.currentPage'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "firstAriaLabel",
              "description": "Label for the go to first button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.first'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "previousAriaLabel",
              "description": "Label for the previous button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.previous'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "nextAriaLabel",
              "description": "Label for the next button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.next'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lastAriaLabel",
              "description": "Label for the go to last button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.last'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "ellipsis",
              "description": "Text to show between page buttons when truncating the list",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'...'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "showFirstLastPage",
              "description": "Show buttons for going to first and last page",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "next",
              "description": "Emitted when clicking on go to next button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "prev",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-pagination.json))",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "first",
              "description": "Emitted when clicking on go to first button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "last",
              "description": "Emitted when clicking on go to last button",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "key",
                  "type": "string | number"
                },
                {
                  "name": "page",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "first",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "ariaLabel",
                  "type": "string"
                },
                {
                  "name": "ariaDisabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "prev",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "ariaLabel",
                  "type": "string"
                },
                {
                  "name": "ariaDisabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "next",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "ariaLabel",
                  "type": "string"
                },
                {
                  "name": "ariaDisabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "last",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "ariaLabel",
                  "type": "string"
                },
                {
                  "name": "ariaDisabled",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VParallax",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VParallax"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-parallax",
          "attributes": [
            {
              "name": "scale",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-parallax.json))",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#props",
              "default": "0.5",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            },
            {
              "name": "placeholder",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            },
            {
              "name": "error",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            },
            {
              "name": "sources",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VProgressCircular",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VProgressCircular"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-progress-circular",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The percentage value for current progress",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the stroke of the circle in pixels",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the diameter of the circle in pixels",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "indeterminate",
              "description": "Constantly animates, use when loading progress is unknown. If set to the string `'disable-shrink'` it will use a simpler animation that does not run on the main thread.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'disable-shrink'\n"
              }
            },
            {
              "name": "rotate",
              "description": "Rotates the circle start point in degrees",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VProgressLinear",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VProgressLinear"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-progress-linear",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "reverse",
              "description": "Displays reversed progress (right to left in LTR mode and left to right in RTL)",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "'top'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies position: absolute to the component",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Reduce the height to 0, hiding component",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum value the progress can reach",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "100",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "indeterminate",
              "description": "Constantly animates, use when loading progress is unknown.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clickable",
              "description": "Clicking on the progress track will automatically set the value",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "bgOpacity",
              "description": "Background opacity, if null it defaults to 0.3 if background color is not specified or 1 otherwise",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "bufferValue",
              "description": "The percentage value for the buffer",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "stream",
              "description": "An alternative style for portraying loading that works in tandem with **buffer-value**",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "striped",
              "description": "Adds a stripe background to the filled portion of the progress component",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "roundedBar",
              "description": "Applies a border radius to the progress bar",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Provides the current value of the component",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                },
                {
                  "name": "buffer",
                  "type": "number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRadio",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRadio"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-radio",
          "attributes": [
            {
              "name": "type",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inline",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "'$radioOff'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "'$radioOn'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#slots"
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-radio#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<any>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRadioGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRadioGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-radio-group",
          "attributes": [
            {
              "name": "type",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'radio'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "inline",
              "description": "Displays radio buttons in row",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'$radioOff'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'$radioOn'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<any>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRangeSlider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRangeSlider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-range-slider",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[0, 0]",
              "value": {
                "kind": "expression",
                "type": "number[]\n"
              }
            },
            {
              "name": "error",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "max",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "100",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "min",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "step",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "thumbColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "thumbLabel",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'\n"
              }
            },
            {
              "name": "thumbSize",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "20",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "showTicks",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'\n"
              }
            },
            {
              "name": "ticks",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "number[] | Record<number, string>\n"
              }
            },
            {
              "name": "tickSize",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "trackColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "trackFillColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "trackSize",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "strict",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-range-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[[number, number]]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-range-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-range-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-range-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "end",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[[number, number]]\n"
                }
              ]
            },
            {
              "name": "start",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[[number, number]]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "tick-label",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots"
            },
            {
              "name": "thumb-label",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRating",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRating"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-rating",
          "attributes": [
            {
              "name": "length",
              "description": "The amount of items to show",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "5",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "Removes all hover effects and pointer events",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared by clicking on the current value",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "hover",
              "description": "Provides visual feedback when hovering over icons",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "itemAriaLabel",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-rating.json))",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'$vuetify.rating.ariaLabel.item'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "emptyIcon",
              "description": "The icon displayed when empty",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'$ratingEmpty'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "fullIcon",
              "description": "The icon displayed when full",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'$ratingFull'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "halfIncrements",
              "description": "Allows the selection of half increments",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "itemLabelPosition",
              "description": "Position of item labels. Accepts 'top' and 'bottom'.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'top'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "itemLabels",
              "description": "Array of labels to display next to each item.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string[]\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-rating#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string | number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "item",
              "description": "The slot for each item",
              "doc-url": "https://vuetifyjs.com/api/v-rating#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "isFilled",
                  "type": "boolean"
                },
                {
                  "name": "isHovered",
                  "type": "boolean"
                },
                {
                  "name": "icon",
                  "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
                },
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                },
                {
                  "name": "rating",
                  "type": "number"
                }
              ]
            },
            {
              "name": "item-label",
              "description": "The slot for each item label",
              "doc-url": "https://vuetifyjs.com/api/v-rating#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "label",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VResponsive",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VResponsive"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-responsive",
          "attributes": [
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Apply a custom class to the internal content element.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "inline",
              "description": "Display as an inline element instead of a block, also disables flex-grow.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "aspectRatio",
              "description": "Sets a base aspect ratio, calculated as width/height. This will only set a **minimum** height, the component can still grow if it has a lot of content",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#slots"
            },
            {
              "name": "additional",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-row",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "align",
              "description": "Applies the [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items) css property. Available options are: **start**, **center**, **end**, **baseline** and **stretch**.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'baseline' | 'stretch'\n"
              }
            },
            {
              "name": "dense",
              "description": "Reduces the gutter between `v-col`s.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noGutters",
              "description": "Removes the gutter between `v-col`s.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "alignSm",
              "description": "Changes the **align-items** property on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'baseline' | 'stretch'\n"
              }
            },
            {
              "name": "alignMd",
              "description": "Changes the **align-items** property on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'baseline' | 'stretch'\n"
              }
            },
            {
              "name": "alignLg",
              "description": "Changes the **align-items** property on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'baseline' | 'stretch'\n"
              }
            },
            {
              "name": "alignXl",
              "description": "Changes the **align-items** property on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'baseline' | 'stretch'\n"
              }
            },
            {
              "name": "alignXxl",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'center' | 'baseline' | 'stretch'\n"
              }
            },
            {
              "name": "justifySm",
              "description": "Changes the **justify-content** property on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "justifyMd",
              "description": "Changes the **justify-content** property on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "justifyLg",
              "description": "Changes the **justify-content** property on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "justifyXl",
              "description": "Changes the **justify-content** property on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "justifyXxl",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "alignContentSm",
              "description": "Changes the **align-content** property on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "alignContentMd",
              "description": "Changes the **align-content** property on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "alignContentLg",
              "description": "Changes the **align-content** property on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "alignContentXl",
              "description": "Changes the **align-content** property on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "alignContentXxl",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "justify",
              "description": "Applies the [justify-content](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content) css property. Available options are: **start**, **center**, **end**, **space-between** and **space-around**.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            },
            {
              "name": "alignContent",
              "description": "Applies the [align-content](https://developer.mozilla.org/en-US/docs/Web/CSS/align-content) css property. Available options are: **start**, **center**, **end**, **space-between**, **space-around** and **stretch**.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "  | 'end'\n  | 'start'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-row#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScaleTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScaleTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scale-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollXReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollXReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollXTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollXTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollYReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollYReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollYTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollYTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSelect",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSelect"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-select",
          "attributes": [
            {
              "name": "flat",
              "description": "Removes elevation (shadow) added to element when using the **solo** or **solo-inverted** props",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "type",
              "description": "Sets input type",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation ",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "Can be an array of objects or array of strings. When using objects, will look for a title, value and disabled keys. This can be changed using the **item-title**, **item-value** and **item-disabled** props.  Objects that have a **header** or **divider** property are considered special cases and generate a list header or divider; these items are not selectable.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "chips",
              "description": "Changes display of selections to chips",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closableChips",
              "description": "Enables the [closable](/api/v-chip/#props-closable) prop on all [v-chip](/components/chips/) components",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideSelected",
              "description": "Do not display in the select menu items that are already selected",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "menu",
              "description": "Renders with the menu open by default",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "menuIcon",
              "description": "Sets the the spin icon",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$dropdown'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "menuProps",
              "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [/api/v-menu](/api/v-menu/#props), camelCase keys are recommended.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "{component: {name: 'VDialogTransition'}}",
              "value": {
                "kind": "expression",
                "type": "string | { component: Component }\n"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "openOnClear",
              "description": "When using the **clearable** prop, once cleared, the select menu will either open or stay open, depending on the current state",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemValue",
              "description": "Set property of **items**'s value - **must be primitive**. Dot notation is supported. **Note:** This is currently not supported with `v-combobox` [GitHub Issue](https://github.com/vuetifyjs/vuetify/issues/5479)",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>\n"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clerable** prop is set to true",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | true\n"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "(value: any) => number\n"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, boolean>\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:menu",
              "description": "Event that is emitted when the component's menu state changes",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "chip",
              "description": "Slot for custom chip when using the [chip](#property-chip) prop",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "selection",
              "description": "Define a custom selection appearance",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "ListItem<unknown>"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "prepend-item",
              "description": "Adds an item before menu content",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "append-item",
              "description": "Adds an item after menu content",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSelectionControl",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSelectionControl"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-selection-control",
          "attributes": [
            {
              "name": "type",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "error",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inline",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#slots"
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<any>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSelectionControlGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSelectionControlGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-selection-control-group",
          "attributes": [
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inline",
              "description": "Puts children inputs into a row.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "'VSelectionControl'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSheet",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSheet"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-sheet",
          "attributes": [
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSkeletonLoader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSkeletonLoader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader",
          "attributes": [
            {
              "name": "type",
              "description": "A string delimited list of skeleton components to create such as `type=\"text@3\"` or `type=\"card, list-item\"`. Will recursively generate a corresponding skeleton from the provided string. Also supports short-hand for multiple elements such as **article@3** and **paragraph@2** which will generate 3 _article_ skeletons and 2 _paragraph_ skeletons. Please see below for a list of available pre-defined options.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "'image'",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "loading",
              "description": "Applies a loading animation with a on-hover loading cursor. A value of **false** will only work when there is content in the `default` slot.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loadingText",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "'$vuetify.loading'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "boilerplate",
              "description": "Remove the loading animation from the skeleton",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-group",
          "attributes": [
            {
              "name": "symbol",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slide-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'v-slide-group-item--active'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "direction",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slide-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "The appended slot when arrows are shown",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "The prepended slot when arrows are shown",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "showArrows",
              "description": "Change when the overflow arrow indicators are shown. By **default**, arrows *always* display on Desktop when the container is overflowing. When the container overflows on mobile, arrows are not shown by default. A **show-arrows** value of `true` allows these arrows to show on Mobile if the container overflowing. A value of `desktop` *always* displays arrows on Desktop while a value of `mobile` always displays arrows on Mobile. A value of `always` always displays arrows on Desktop *and* Mobile. Find more information on how to customize breakpoint thresholds on the [breakpoints page](/customizing/breakpoints).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "centerActive",
              "description": "Forces the selected component to be centered",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#slots",
              "vue-properties": [
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                }
              ]
            },
            {
              "name": "prev",
              "description": "The prev slot",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#slots",
              "vue-properties": [
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                }
              ]
            },
            {
              "name": "next",
              "description": "The next slot",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#slots",
              "vue-properties": [
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideGroupItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideGroupItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-group-item",
          "attributes": [
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggle",
                  "type": "() => void"
                },
                {
                  "name": "selectedClass",
                  "type": "false | string[]"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideXReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideXReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideXTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideXTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideYReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideYReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideYTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideYTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation)",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slider",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum allowed value",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "100",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "min",
              "description": "Sets the minimum allowed value",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "step",
              "description": "If greater than 0, sets step interval for ticks",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "thumbColor",
              "description": "Sets the thumb and thumb label color",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "thumbLabel",
              "description": "Show thumb label. If `true` it shows label when using slider. If set to `'always'` it always shows label.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'\n"
              }
            },
            {
              "name": "thumbSize",
              "description": "Controls the size of the thumb label.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "20",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "showTicks",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'\n"
              }
            },
            {
              "name": "ticks",
              "description": "Show track ticks. If `true` it shows ticks when using slider. If set to `'always'` it always shows ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "number[] | Record<number, string>\n"
              }
            },
            {
              "name": "tickSize",
              "description": "Controls the size of **ticks**",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "trackColor",
              "description": "Sets the track's color",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "trackFillColor",
              "description": "Sets the track's fill color",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "trackSize",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "end",
              "description": "Slider value emitted at the end of slider movement",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "start",
              "description": "Slider value emitted at start of slider movement",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "tick-label",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots"
            },
            {
              "name": "thumb-label",
              "description": "Replaces the content inside the thumb label",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSnackbar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSnackbar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-snackbar",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "position",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activator",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | Element | ComponentPublicInstance\n"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "contentProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "activatorProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "{}\n"
              }
            },
            {
              "name": "openOnClick",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnHover",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnFocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'v-snackbar-transition'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element\n"
              }
            },
            {
              "name": "vertical",
              "description": "Stacks snackbar content on top of the actions (button).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "multiLine",
              "description": "Gives the snackbar a larger minimum height.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "timeout",
              "description": "Time (in milliseconds) to wait until snackbar is automatically hidden.  Use `-1` to keep open indefinitely (`0` in version < 2.3 ). It is recommended for this number to be between `4000` and `10000`. Changes to this property will reset the timeout.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "5000",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots"
            },
            {
              "name": "actions",
              "description": "Used to bind styles to [v-btn](/components/buttons) to match MD2 specification.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSpacer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSpacer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-spacer",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-spacer#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-spacer#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSvgIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSvgIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-svg-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-svg-icon#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element",
              "doc-url": "https://vuetifyjs.com/api/v-svg-icon#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSwitch",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSwitch"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-switch",
          "attributes": [
            {
              "name": "flat",
              "description": "Display component without elevation. Default elevation for thumb is 4dp, `flat` resets it",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "type",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays circular progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Changes expected model to an array",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm used for values",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "inline",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "inset",
              "description": "Enlarge the `v-switch` track to encompass the thumb",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "indeterminate",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-switch.json))",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "falseIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "trueIcon",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-switch.json))",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-switch.json))",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-switch.json))",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "update:indeterminate",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-switch.json))",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<any>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSystemBar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSystemBar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-system-bar",
          "attributes": [
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "window",
              "description": "Increases the system bar height to 32px (24px default).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTab",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTab"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-tab",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "  | boolean\n  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "fixed",
              "description": "Forces component to take up all available space up to their maximum width (300px), and centers it.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'button'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "stacked",
              "description": "Displays the tab as a flex-column.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'v-tab--selected'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "unknown\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the tabs. Can be either `horizontal` or `vertical`.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "sliderColor",
              "description": "Applies specified color to the slider when active on that component - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "hideSlider",
              "description": "Hides the active tab slider component (no exit or enter animation).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTable",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTable"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-table",
          "attributes": [
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Use the height prop to set the height of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "hover",
              "description": "Will add a hover effect to a table's row when the mouse is over it.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Use the fixed-header prop together with the height prop to fix the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "fixedFooter",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            },
            {
              "name": "top",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            },
            {
              "name": "bottom",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            },
            {
              "name": "wrapper",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTabs",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTabs"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-tabs",
          "attributes": [
            {
              "name": "symbol",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slide-group.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height of the tabs bar",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the selected tab - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "items",
              "description": "The items to display in the component. This can be an array of strings or objects with a property `title`",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(string | Record<string, any>)[]\n"
              }
            },
            {
              "name": "stacked",
              "description": "Apply the stacked prop to all children v-tab components.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'v-slide-group-item--active'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select mulitple items.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the tabs. Can be either `horizontal` or `vertical`.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "number\n"
              }
            },
            {
              "name": "grow",
              "description": "Force `v-tab`'s to take up all available space",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "Right pagination icon",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "Left pagination icon",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "showArrows",
              "description": "Show pagination arrows if the tab items overflow their container. For mobile devices, arrows will only display when using this prop.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "centerActive",
              "description": "Forces the selected tab to be centered",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "sliderColor",
              "description": "Changes the background color of an auto-generated `v-tabs-slider`",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "hideSlider",
              "description": "Hide's the generated `v-tabs-slider`",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "alignTabs",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tabs.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'start'",
              "value": {
                "kind": "expression",
                "type": "'title' | 'end' | 'start' | 'center'\n"
              }
            },
            {
              "name": "fixedTabs",
              "description": "`v-tabs-item` min-width 160px, max-width 360px",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTextField",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTextField"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-text-field",
          "attributes": [
            {
              "name": "flat",
              "description": "Removes elevation (shadow) added to element when using the **solo** or **solo-inverted** props",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "type",
              "description": "Sets input type",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the input orientation",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "Applied when using **clearable** and the input is dirty",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | true\n"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "(value: any) => number\n"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, boolean>\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:control",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "mousedown:control",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots"
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots"
            },
            {
              "name": "counter",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "counter",
                  "type": "string"
                },
                {
                  "name": "max",
                  "type": "string | number"
                },
                {
                  "name": "value",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTextarea",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTextarea"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-textarea",
          "attributes": [
            {
              "name": "flat",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation ",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "  | 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "autofocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prefix",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "placeholder",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "suffix",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'\n"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clerable** prop is set to true",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover)",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | true\n"
              }
            },
            {
              "name": "counterValue",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "(value: any) => number\n"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "Record<string, boolean>\n"
              }
            },
            {
              "name": "autoGrow",
              "description": "Automatically grow the textarea depending on amount of text",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "noResize",
              "description": "Remove resize handle",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rows",
              "description": "Default row count",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "5",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxRows",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean] | [boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            },
            {
              "name": "click:control",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "mousedown:control",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true)",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Slot that is appended to the input",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots"
            },
            {
              "name": "counter",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "counter",
                  "type": "string"
                },
                {
                  "name": "max",
                  "type": "string | number"
                },
                {
                  "name": "value",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VThemeProvider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VThemeProvider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-theme-provider",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "withBackground",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-theme-provider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "All child components will have their theme overridden. Must have exactly one root element.",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTimeline",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTimeline"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-timeline",
          "attributes": [
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "direction",
              "description": "Display timeline in a **vertical** or **horizontal** direction",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'vertical'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "align",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'center'",
              "value": {
                "kind": "expression",
                "type": "'start' | 'center'\n"
              }
            },
            {
              "name": "side",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start'\n"
              }
            },
            {
              "name": "justify",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "lineInset",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "lineThickness",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "lineColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "truncateLine",
              "description": "Truncate timeline directly at the **start** or **end** of the line, or on **both** ends",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "'end' | 'start' | 'both'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTimelineItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTimelineItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-timeline-item",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon to the inside dot using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "'default' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "size",
              "description": "Size of the item dot",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "lineInset",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "dotColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline-item.json))",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "fillDot",
              "description": "Remove outer border of item dot, making the color fill the entire dot",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideDot",
              "description": "Hide the timeline item dot",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "hideOpposite",
              "description": "Hide opposite content if it exists",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "iconColor",
              "description": "Color of the icon",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#slots"
            },
            {
              "name": "icon",
              "description": "Used to customize the icon inside the item dot",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#slots"
            },
            {
              "name": "opposite",
              "description": "Used to customize the opposite side of timeline items",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VToolbar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VToolbar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-toolbar",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "flat",
              "description": "Removes the toolbar's box-shadow.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'prominent' | 'comfortable' | 'compact'\n"
              }
            },
            {
              "name": "height",
              "description": "Designates a specific height for the toolbar. Overrides the heights imposed by other props, e.g. **prominent**, **dense**, **extended**, etc.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "64",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "absolute",
              "description": "Applies position: absolute to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "'header'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "image",
              "description": "Specifies a [v-img](/components/images) as the component's background.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "collapse",
              "description": "Puts the toolbar into a collapsed state reducing its maximum width.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "extended",
              "description": "Use this prop to increase the height of the toolbar _without_ using the `extension` slot for adding content. May be used in conjunction with the **extension-height** prop, and any of the other props that affect the height of the toolbar, e.g. **prominent**, **dense**, etc., **WITH THE EXCEPTION** of **height**.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "extensionHeight",
              "description": "Specify an explicit height for the `extension` slot. ",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "floating",
              "description": "Applies **display: inline-flex** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "image",
              "description": "Expects the [v-img](/components/images) component. Scoped **props** should be applied with `v-bind=\"props\"`.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "extension",
              "description": "Slot positioned directly under the main content of the toolbar. Height of this slot can be set explicitly with the **extension-height** prop. If this slot has no content, the **extended** prop may be used instead.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VToolbarItems",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VToolbarItems"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-toolbar-items",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-items#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-items#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-items#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VToolbarTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VToolbarTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-toolbar-title",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTooltip",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTooltip"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-tooltip",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'end'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tooltip.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "activator",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | Element | ComponentPublicInstance\n"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "contentProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "activatorProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "{}\n"
              }
            },
            {
              "name": "openOnClick",
              "description": "Designates whether the tooltip should open on activator click",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnHover",
              "description": "Designates whether the tooltip should open on activator hover",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "openOnFocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "closeDelay",
              "description": "Delay (in ms) after which menu closes (when open-on-hover prop is set to true)",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "openDelay",
              "description": "Delay (in ms) after which tooltip opens (when `open-on-hover` prop is set to **true**)",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'connected'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>\n"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]\n"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'reposition'",
              "value": {
                "kind": "expression",
                "type": "'close' | 'block' | 'none' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>\n"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VValidation",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VValidation"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-validation",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]\n"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]\n"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "  | 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-validation#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes",
              "doc-url": "https://vuetifyjs.com/api/v-validation#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "never\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#slots",
              "vue-properties": [
                {
                  "name": "errorMessages",
                  "type": "ComputedRef<string[]>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "ShallowRef<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "ShallowRef<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "(silent: boolean) => Promise<string[]>"
                },
                {
                  "name": "validationClasses",
                  "type": "ComputedRef<{ [x: string]: boolean; }>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VVirtualScroll",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VVirtualScroll"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll",
          "attributes": [
            {
              "name": "height",
              "description": "Height of the component as a css value",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            },
            {
              "name": "items",
              "description": "The array of items to display",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "unknown[]\n"
              }
            },
            {
              "name": "itemHeight",
              "description": "Height in pixels of each item to display. When using **dynamic-item-height** this should be an average initial size.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number\n"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "Default slot to render a single item",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "unknown"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VWindow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VWindow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-window",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "reverse",
              "description": "Reverse the normal transition direction.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'v-window-item--active'",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "direction",
              "description": "The transition direction when changing windows.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'\n"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "'force'\n"
              }
            },
            {
              "name": "continuous",
              "description": "If `true`, window will \"wrap around\" from the last item to the first, and from the first item to the last",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "nextIcon",
              "description": "Icon used for the \"next\" button if `show-arrows` is `true`",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "prevIcon",
              "description": "Icon used for the \"prev\" button if `show-arrows` is `true`",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n"
              }
            },
            {
              "name": "showArrows",
              "description": "Display the \"next\" and \"prev\" buttons",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "touch",
              "description": "Provide a custom **left** and **right** function when swiped left or right.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes",
              "doc-url": "https://vuetifyjs.com/api/v-window#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean; }[]>; disabled: Ref<boolean>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "additional",
              "description": "Slot for additional content at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean; }[]>; disabled: Ref<boolean>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Slot displaying the arrow switching to the previous item",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: string | (string | [string, number])[] | (new () => any) | FunctionalComponent; class: string; onClick: () => void; ariaLabel: string }"
                }
              ]
            },
            {
              "name": "next",
              "description": "Slot displaying the arrow switching to the next item",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: string | (string | [string, number])[] | (new () => any) | FunctionalComponent; class: string; onClick: () => void; ariaLabel: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VWindowItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VWindowItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-window-item",
          "attributes": [
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "value": {
                "kind": "expression",
                "type": "any\n"
              }
            },
            {
              "name": "disabled",
              "description": "Prevents the item from becoming active when using the \"next\" and \"prev\" buttons or the `toggle` method",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string\n"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean\n"
              }
            },
            {
              "name": "transition",
              "description": "The transition used when the component progressing through items. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            },
            {
              "name": "reverseTransition",
              "description": "Sets the reverse transition",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean\n"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        }
      ],
      "attributes": [
        {
          "name": "ClickOutside",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/ClickOutside",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Ickoutside"
          },
          "vue-argument": {
            "description": "By default takes a function that is invoked when user clicks outside of the element the directive is attached to. It can also be an object, which allows you to provide `closeConditional` and `include` callbacks.",
            "doc-url": "https://vuetifyjs.com/api/ClickOutside#argument"
          }
        },
        {
          "name": "Intersect",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Intersect",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Tersect"
          },
          "vue-argument": {
            "description": "By default takes a handler function that is invoked when the element that the directive is attached to enters or leaves the visible browser area. It can also take an object, which allows you to pass along [IntersectionObserver options](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver).",
            "doc-url": "https://vuetifyjs.com/api/Intersect#argument"
          },
          "vue-modifiers": [
            {
              "name": "once",
              "description": "The provided handler function is only invoked once, the first time the element is visible.",
              "doc-url": "https://vuetifyjs.com/api/Intersect#modifiers"
            },
            {
              "name": "quiet",
              "description": "Will not invoke the handler function if the element is visible when the IntersectionObserver is created.",
              "doc-url": "https://vuetifyjs.com/api/Intersect#modifiers"
            }
          ]
        },
        {
          "name": "Mutate",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Mutate",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Tate"
          },
          "vue-argument": {
            "description": "By default takes a handler function that is invoked when the element that the directive is attached to is mutated. It can also take an object, which allows you to pass along [MutationObserver options](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe).",
            "doc-url": "https://vuetifyjs.com/api/Mutate#argument"
          },
          "vue-modifiers": [
            {
              "name": "attr",
              "description": "Sets the value of [attributes](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributes) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "char",
              "description": "Sets the value of [characterData](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterData) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "child",
              "description": "Sets the value of [childList](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/childList) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "sub",
              "description": "Sets the value of [subtree](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe#Parameters) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "once",
              "description": "The provided handler function is only invoked once.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "immediate",
              "description": "The provided handler function is invoked immediately when directive is attached to element.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            }
          ]
        },
        {
          "name": "Resize",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Resize",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Size"
          },
          "vue-argument": {
            "description": "The provided handler function will be invoked each time the browser window is resized.",
            "doc-url": "https://vuetifyjs.com/api/Resize#argument"
          },
          "vue-modifiers": [
            {
              "name": "active",
              "description": "By default the resize event listener is added to window with the `passive` option. This modifier sets `passive` to **false**.",
              "doc-url": "https://vuetifyjs.com/api/Resize#modifiers"
            },
            {
              "name": "quiet",
              "description": "By default the provided handler function is invoked once when the directive is attached to the element. This modifier disabled that behavior.",
              "doc-url": "https://vuetifyjs.com/api/Resize#modifiers"
            }
          ]
        },
        {
          "name": "Ripple",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Ripple",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Pple"
          },
          "vue-argument": {
            "description": "An object containing options for the ripple effect. `class` applies a custom class to the ripple, and can be used for changing color. `center` forces the ripple to originate from the center of the target.",
            "doc-url": "https://vuetifyjs.com/api/Ripple#argument"
          },
          "vue-modifiers": [
            {
              "name": "center",
              "description": "Makes it so that the ripple originates from the center of the element, instead where the user clicked on it.",
              "doc-url": "https://vuetifyjs.com/api/Ripple#modifiers"
            },
            {
              "name": "circle",
              "description": "Changes the ripple behavior to better match circular elements.",
              "doc-url": "https://vuetifyjs.com/api/Ripple#modifiers"
            },
            {
              "name": "stop",
              "description": "Prevents ripples from being triggered on any other elements when the click event is bubbling up.",
              "doc-url": "https://vuetifyjs.com/api/Ripple#modifiers"
            }
          ]
        },
        {
          "name": "Scroll",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Scroll",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Roll"
          },
          "vue-argument": {
            "description": "By default takes a handler function that is invoked whenever the target of the directive is scrolled. It can also take an object, which allows you to pass along event listener options as described [here](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener).",
            "doc-url": "https://vuetifyjs.com/api/Scroll#argument"
          },
          "vue-modifiers": [
            {
              "name": "self",
              "description": "By default the scroll event listener is attached to the argument provided to the directive, interpreted as a query selector. If no argument is provided then it is attached to the window object. If this modifier is used then it is instead attached to the element the directive is used on.",
              "doc-url": "https://vuetifyjs.com/api/Scroll#modifiers"
            }
          ]
        },
        {
          "name": "Touch",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Touch",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Uch"
          },
          "vue-argument": {
            "description": "The value is always an object. The `start`, `end`, `move`, `left`, `right`, `up` and `down` functions can be used to invoke a function when the corresponding touch action occurs. If the `parent` option attaches the touch listeners to the parent element instead of the element the directive is used on. The `options` object is described [here](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener).",
            "doc-url": "https://vuetifyjs.com/api/Touch#argument"
          }
        }
      ]
    }
  }
}